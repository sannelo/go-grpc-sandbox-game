// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/game/game.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockAction_ActionType int32

const (
	BlockAction_PLACE    BlockAction_ActionType = 0
	BlockAction_DESTROY  BlockAction_ActionType = 1
	BlockAction_INTERACT BlockAction_ActionType = 2
)

// Enum value maps for BlockAction_ActionType.
var (
	BlockAction_ActionType_name = map[int32]string{
		0: "PLACE",
		1: "DESTROY",
		2: "INTERACT",
	}
	BlockAction_ActionType_value = map[string]int32{
		"PLACE":    0,
		"DESTROY":  1,
		"INTERACT": 2,
	}
)

func (x BlockAction_ActionType) Enum() *BlockAction_ActionType {
	p := new(BlockAction_ActionType)
	*p = x
	return p
}

func (x BlockAction_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockAction_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_game_proto_enumTypes[0].Descriptor()
}

func (BlockAction_ActionType) Type() protoreflect.EnumType {
	return &file_proto_game_game_proto_enumTypes[0]
}

func (x BlockAction_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockAction_ActionType.Descriptor instead.
func (BlockAction_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{8, 0}
}

type WorldEvent_EventType int32

const (
	WorldEvent_BLOCK_PLACED     WorldEvent_EventType = 0
	WorldEvent_BLOCK_DESTROYED  WorldEvent_EventType = 1
	WorldEvent_ENTITY_SPAWNED   WorldEvent_EventType = 2
	WorldEvent_ENTITY_DESTROYED WorldEvent_EventType = 3
	WorldEvent_WEATHER_CHANGED  WorldEvent_EventType = 4
	WorldEvent_TIME_CHANGED     WorldEvent_EventType = 5
	WorldEvent_SERVER_SHUTDOWN  WorldEvent_EventType = 6
)

// Enum value maps for WorldEvent_EventType.
var (
	WorldEvent_EventType_name = map[int32]string{
		0: "BLOCK_PLACED",
		1: "BLOCK_DESTROYED",
		2: "ENTITY_SPAWNED",
		3: "ENTITY_DESTROYED",
		4: "WEATHER_CHANGED",
		5: "TIME_CHANGED",
		6: "SERVER_SHUTDOWN",
	}
	WorldEvent_EventType_value = map[string]int32{
		"BLOCK_PLACED":     0,
		"BLOCK_DESTROYED":  1,
		"ENTITY_SPAWNED":   2,
		"ENTITY_DESTROYED": 3,
		"WEATHER_CHANGED":  4,
		"TIME_CHANGED":     5,
		"SERVER_SHUTDOWN":  6,
	}
)

func (x WorldEvent_EventType) Enum() *WorldEvent_EventType {
	p := new(WorldEvent_EventType)
	*p = x
	return p
}

func (x WorldEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorldEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_game_proto_enumTypes[1].Descriptor()
}

func (WorldEvent_EventType) Type() protoreflect.EnumType {
	return &file_proto_game_game_proto_enumTypes[1]
}

func (x WorldEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorldEvent_EventType.Descriptor instead.
func (WorldEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{16, 0}
}

type Weather_WeatherType int32

const (
	Weather_CLEAR Weather_WeatherType = 0
	Weather_RAIN  Weather_WeatherType = 1
	Weather_STORM Weather_WeatherType = 2
)

// Enum value maps for Weather_WeatherType.
var (
	Weather_WeatherType_name = map[int32]string{
		0: "CLEAR",
		1: "RAIN",
		2: "STORM",
	}
	Weather_WeatherType_value = map[string]int32{
		"CLEAR": 0,
		"RAIN":  1,
		"STORM": 2,
	}
)

func (x Weather_WeatherType) Enum() *Weather_WeatherType {
	p := new(Weather_WeatherType)
	*p = x
	return p
}

func (x Weather_WeatherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weather_WeatherType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_game_proto_enumTypes[2].Descriptor()
}

func (Weather_WeatherType) Type() protoreflect.EnumType {
	return &file_proto_game_game_proto_enumTypes[2]
}

func (x Weather_WeatherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weather_WeatherType.Descriptor instead.
func (Weather_WeatherType) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{21, 0}
}

// Запрос на присоединение к игре
type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerName    string                 `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_proto_game_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{0}
}

func (x *JoinRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// Ответ на запрос присоединения
type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SpawnPosition *Position              `protobuf:"bytes,2,opt,name=spawn_position,json=spawnPosition,proto3" json:"spawn_position,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_proto_game_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{1}
}

func (x *JoinResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinResponse) GetSpawnPosition() *Position {
	if x != nil {
		return x.SpawnPosition
	}
	return nil
}

func (x *JoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Запрос на получение чанков
type ChunkRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerPosition *Position              `protobuf:"bytes,1,opt,name=player_position,json=playerPosition,proto3" json:"player_position,omitempty"`
	Radius         int32                  `protobuf:"varint,2,opt,name=radius,proto3" json:"radius,omitempty"` // Радиус запрашиваемых чанков
	PlayerId       string                 `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChunkRequest) Reset() {
	*x = ChunkRequest{}
	mi := &file_proto_game_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkRequest) ProtoMessage() {}

func (x *ChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkRequest.ProtoReflect.Descriptor instead.
func (*ChunkRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkRequest) GetPlayerPosition() *Position {
	if x != nil {
		return x.PlayerPosition
	}
	return nil
}

func (x *ChunkRequest) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *ChunkRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Запрос на генерацию чанков
type GenerateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Positions     []*ChunkPosition       `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateRequest) Reset() {
	*x = GenerateRequest{}
	mi := &file_proto_game_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRequest) ProtoMessage() {}

func (x *GenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRequest.ProtoReflect.Descriptor instead.
func (*GenerateRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateRequest) GetPositions() []*ChunkPosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *GenerateRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Ответ на генерацию чанков
type GenerateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateResponse) Reset() {
	*x = GenerateResponse{}
	mi := &file_proto_game_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateResponse) ProtoMessage() {}

func (x *GenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateResponse.ProtoReflect.Descriptor instead.
func (*GenerateResponse) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GenerateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Сообщение от клиента к серверу
type ClientMessage struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	PlayerId string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ClientMessage_Movement
	//	*ClientMessage_BlockAction
	//	*ClientMessage_Chat
	//	*ClientMessage_Ping
	Payload       isClientMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_proto_game_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{5}
}

func (x *ClientMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ClientMessage) GetPayload() isClientMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientMessage) GetMovement() *PlayerMovement {
	if x != nil {
		if x, ok := x.Payload.(*ClientMessage_Movement); ok {
			return x.Movement
		}
	}
	return nil
}

func (x *ClientMessage) GetBlockAction() *BlockAction {
	if x != nil {
		if x, ok := x.Payload.(*ClientMessage_BlockAction); ok {
			return x.BlockAction
		}
	}
	return nil
}

func (x *ClientMessage) GetChat() *ChatMessage {
	if x != nil {
		if x, ok := x.Payload.(*ClientMessage_Chat); ok {
			return x.Chat
		}
	}
	return nil
}

func (x *ClientMessage) GetPing() *Ping {
	if x != nil {
		if x, ok := x.Payload.(*ClientMessage_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

type isClientMessage_Payload interface {
	isClientMessage_Payload()
}

type ClientMessage_Movement struct {
	Movement *PlayerMovement `protobuf:"bytes,2,opt,name=movement,proto3,oneof"`
}

type ClientMessage_BlockAction struct {
	BlockAction *BlockAction `protobuf:"bytes,3,opt,name=block_action,json=blockAction,proto3,oneof"`
}

type ClientMessage_Chat struct {
	Chat *ChatMessage `protobuf:"bytes,4,opt,name=chat,proto3,oneof"`
}

type ClientMessage_Ping struct {
	Ping *Ping `protobuf:"bytes,5,opt,name=ping,proto3,oneof"`
}

func (*ClientMessage_Movement) isClientMessage_Payload() {}

func (*ClientMessage_BlockAction) isClientMessage_Payload() {}

func (*ClientMessage_Chat) isClientMessage_Payload() {}

func (*ClientMessage_Ping) isClientMessage_Payload() {}

// Сообщение от сервера к клиенту
type ServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ServerMessage_WorldEvent
	//	*ServerMessage_PlayerUpdate
	//	*ServerMessage_ChunkUpdate
	//	*ServerMessage_ChatBroadcast
	//	*ServerMessage_Pong
	Payload       isServerMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_proto_game_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{6}
}

func (x *ServerMessage) GetPayload() isServerMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ServerMessage) GetWorldEvent() *WorldEvent {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_WorldEvent); ok {
			return x.WorldEvent
		}
	}
	return nil
}

func (x *ServerMessage) GetPlayerUpdate() *PlayerUpdate {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_PlayerUpdate); ok {
			return x.PlayerUpdate
		}
	}
	return nil
}

func (x *ServerMessage) GetChunkUpdate() *ChunkUpdate {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_ChunkUpdate); ok {
			return x.ChunkUpdate
		}
	}
	return nil
}

func (x *ServerMessage) GetChatBroadcast() *ChatBroadcast {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_ChatBroadcast); ok {
			return x.ChatBroadcast
		}
	}
	return nil
}

func (x *ServerMessage) GetPong() *Pong {
	if x != nil {
		if x, ok := x.Payload.(*ServerMessage_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

type isServerMessage_Payload interface {
	isServerMessage_Payload()
}

type ServerMessage_WorldEvent struct {
	WorldEvent *WorldEvent `protobuf:"bytes,1,opt,name=world_event,json=worldEvent,proto3,oneof"`
}

type ServerMessage_PlayerUpdate struct {
	PlayerUpdate *PlayerUpdate `protobuf:"bytes,2,opt,name=player_update,json=playerUpdate,proto3,oneof"`
}

type ServerMessage_ChunkUpdate struct {
	ChunkUpdate *ChunkUpdate `protobuf:"bytes,3,opt,name=chunk_update,json=chunkUpdate,proto3,oneof"`
}

type ServerMessage_ChatBroadcast struct {
	ChatBroadcast *ChatBroadcast `protobuf:"bytes,4,opt,name=chat_broadcast,json=chatBroadcast,proto3,oneof"`
}

type ServerMessage_Pong struct {
	Pong *Pong `protobuf:"bytes,5,opt,name=pong,proto3,oneof"`
}

func (*ServerMessage_WorldEvent) isServerMessage_Payload() {}

func (*ServerMessage_PlayerUpdate) isServerMessage_Payload() {}

func (*ServerMessage_ChunkUpdate) isServerMessage_Payload() {}

func (*ServerMessage_ChatBroadcast) isServerMessage_Payload() {}

func (*ServerMessage_Pong) isServerMessage_Payload() {}

// Движение игрока
type PlayerMovement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewPosition   *Position              `protobuf:"bytes,1,opt,name=new_position,json=newPosition,proto3" json:"new_position,omitempty"`
	Direction     float32                `protobuf:"fixed32,2,opt,name=direction,proto3" json:"direction,omitempty"` // Направление в радианах
	IsRunning     bool                   `protobuf:"varint,3,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerMovement) Reset() {
	*x = PlayerMovement{}
	mi := &file_proto_game_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerMovement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMovement) ProtoMessage() {}

func (x *PlayerMovement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMovement.ProtoReflect.Descriptor instead.
func (*PlayerMovement) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerMovement) GetNewPosition() *Position {
	if x != nil {
		return x.NewPosition
	}
	return nil
}

func (x *PlayerMovement) GetDirection() float32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *PlayerMovement) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

// Действие с блоком
type BlockAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        BlockAction_ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=game.BlockAction_ActionType" json:"action,omitempty"`
	Position      *Position              `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	BlockType     int32                  `protobuf:"varint,3,opt,name=block_type,json=blockType,proto3" json:"block_type,omitempty"` // При размещении
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockAction) Reset() {
	*x = BlockAction{}
	mi := &file_proto_game_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockAction) ProtoMessage() {}

func (x *BlockAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockAction.ProtoReflect.Descriptor instead.
func (*BlockAction) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{8}
}

func (x *BlockAction) GetAction() BlockAction_ActionType {
	if x != nil {
		return x.Action
	}
	return BlockAction_PLACE
}

func (x *BlockAction) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BlockAction) GetBlockType() int32 {
	if x != nil {
		return x.BlockType
	}
	return 0
}

// Сообщение чата
type ChatMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Content        string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsGlobal       bool                   `protobuf:"varint,2,opt,name=is_global,json=isGlobal,proto3" json:"is_global,omitempty"`                    // Глобальный или локальный чат
	TargetPlayerId string                 `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"` // Для личных сообщений
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_game_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{9}
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetIsGlobal() bool {
	if x != nil {
		return x.IsGlobal
	}
	return false
}

func (x *ChatMessage) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

// Игрок и его состояние
type Player struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Position            *Position              `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Health              int32                  `protobuf:"varint,4,opt,name=health,proto3" json:"health,omitempty"`
	CurrentSelectedItem int32                  `protobuf:"varint,5,opt,name=current_selected_item,json=currentSelectedItem,proto3" json:"current_selected_item,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_proto_game_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{10}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Player) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Player) GetCurrentSelectedItem() int32 {
	if x != nil {
		return x.CurrentSelectedItem
	}
	return 0
}

// Позиция в мире
type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z             int32                  `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"` // Уровень/высота
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_proto_game_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{11}
}

func (x *Position) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Position) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// Идентификатор чанка
type ChunkPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkPosition) Reset() {
	*x = ChunkPosition{}
	mi := &file_proto_game_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkPosition) ProtoMessage() {}

func (x *ChunkPosition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkPosition.ProtoReflect.Descriptor instead.
func (*ChunkPosition) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{12}
}

func (x *ChunkPosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ChunkPosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Чанк мира
type Chunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *ChunkPosition         `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Blocks        []*Block               `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Entities      []*Entity              `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_proto_game_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{13}
}

func (x *Chunk) GetPosition() *ChunkPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Chunk) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *Chunk) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// Блок в мире
type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"` // Локальная позиция внутри чанка
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Дополнительные свойства
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_proto_game_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{14}
}

func (x *Block) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Block) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Block) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Block) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Сущность в мире
type Entity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Position      *Position              `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_proto_game_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{15}
}

func (x *Entity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Entity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Entity) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Entity) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Мировое событие
type WorldEvent struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Type     WorldEvent_EventType   `protobuf:"varint,1,opt,name=type,proto3,enum=game.WorldEvent_EventType" json:"type,omitempty"`
	Position *Position              `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	PlayerId string                 `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Message  string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"` // Текстовое сообщение для дополнительной информации
	// Types that are valid to be assigned to Payload:
	//
	//	*WorldEvent_Block
	//	*WorldEvent_Entity
	//	*WorldEvent_Weather
	//	*WorldEvent_TimeInfo
	Payload       isWorldEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldEvent) Reset() {
	*x = WorldEvent{}
	mi := &file_proto_game_game_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEvent) ProtoMessage() {}

func (x *WorldEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEvent.ProtoReflect.Descriptor instead.
func (*WorldEvent) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{16}
}

func (x *WorldEvent) GetType() WorldEvent_EventType {
	if x != nil {
		return x.Type
	}
	return WorldEvent_BLOCK_PLACED
}

func (x *WorldEvent) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *WorldEvent) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *WorldEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WorldEvent) GetPayload() isWorldEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WorldEvent) GetBlock() *Block {
	if x != nil {
		if x, ok := x.Payload.(*WorldEvent_Block); ok {
			return x.Block
		}
	}
	return nil
}

func (x *WorldEvent) GetEntity() *Entity {
	if x != nil {
		if x, ok := x.Payload.(*WorldEvent_Entity); ok {
			return x.Entity
		}
	}
	return nil
}

func (x *WorldEvent) GetWeather() *Weather {
	if x != nil {
		if x, ok := x.Payload.(*WorldEvent_Weather); ok {
			return x.Weather
		}
	}
	return nil
}

func (x *WorldEvent) GetTimeInfo() *TimeInfo {
	if x != nil {
		if x, ok := x.Payload.(*WorldEvent_TimeInfo); ok {
			return x.TimeInfo
		}
	}
	return nil
}

type isWorldEvent_Payload interface {
	isWorldEvent_Payload()
}

type WorldEvent_Block struct {
	Block *Block `protobuf:"bytes,4,opt,name=block,proto3,oneof"`
}

type WorldEvent_Entity struct {
	Entity *Entity `protobuf:"bytes,5,opt,name=entity,proto3,oneof"`
}

type WorldEvent_Weather struct {
	Weather *Weather `protobuf:"bytes,6,opt,name=weather,proto3,oneof"`
}

type WorldEvent_TimeInfo struct {
	TimeInfo *TimeInfo `protobuf:"bytes,7,opt,name=time_info,json=timeInfo,proto3,oneof"`
}

func (*WorldEvent_Block) isWorldEvent_Payload() {}

func (*WorldEvent_Entity) isWorldEvent_Payload() {}

func (*WorldEvent_Weather) isWorldEvent_Payload() {}

func (*WorldEvent_TimeInfo) isWorldEvent_Payload() {}

// Обновление игрока
type PlayerUpdate struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PlayerId            string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Position            *Position              `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Health              int32                  `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`
	IsConnected         bool                   `protobuf:"varint,4,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	CurrentSelectedItem int32                  `protobuf:"varint,5,opt,name=current_selected_item,json=currentSelectedItem,proto3" json:"current_selected_item,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PlayerUpdate) Reset() {
	*x = PlayerUpdate{}
	mi := &file_proto_game_game_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUpdate) ProtoMessage() {}

func (x *PlayerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUpdate.ProtoReflect.Descriptor instead.
func (*PlayerUpdate) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerUpdate) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerUpdate) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerUpdate) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *PlayerUpdate) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *PlayerUpdate) GetCurrentSelectedItem() int32 {
	if x != nil {
		return x.CurrentSelectedItem
	}
	return 0
}

// Обновление чанка
type ChunkUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *ChunkPosition         `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	BlockUpdates  []*BlockUpdate         `protobuf:"bytes,2,rep,name=block_updates,json=blockUpdates,proto3" json:"block_updates,omitempty"`
	EntityUpdates []*EntityUpdate        `protobuf:"bytes,3,rep,name=entity_updates,json=entityUpdates,proto3" json:"entity_updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkUpdate) Reset() {
	*x = ChunkUpdate{}
	mi := &file_proto_game_game_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkUpdate) ProtoMessage() {}

func (x *ChunkUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkUpdate.ProtoReflect.Descriptor instead.
func (*ChunkUpdate) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{18}
}

func (x *ChunkUpdate) GetPosition() *ChunkPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ChunkUpdate) GetBlockUpdates() []*BlockUpdate {
	if x != nil {
		return x.BlockUpdates
	}
	return nil
}

func (x *ChunkUpdate) GetEntityUpdates() []*EntityUpdate {
	if x != nil {
		return x.EntityUpdates
	}
	return nil
}

// Обновление блока
type BlockUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockUpdate) Reset() {
	*x = BlockUpdate{}
	mi := &file_proto_game_game_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockUpdate) ProtoMessage() {}

func (x *BlockUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockUpdate.ProtoReflect.Descriptor instead.
func (*BlockUpdate) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{19}
}

func (x *BlockUpdate) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BlockUpdate) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BlockUpdate) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BlockUpdate) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Обновление сущности
type EntityUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Position      *Position              `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsRemoved     bool                   `protobuf:"varint,5,opt,name=is_removed,json=isRemoved,proto3" json:"is_removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityUpdate) Reset() {
	*x = EntityUpdate{}
	mi := &file_proto_game_game_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityUpdate) ProtoMessage() {}

func (x *EntityUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityUpdate.ProtoReflect.Descriptor instead.
func (*EntityUpdate) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{20}
}

func (x *EntityUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityUpdate) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *EntityUpdate) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *EntityUpdate) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *EntityUpdate) GetIsRemoved() bool {
	if x != nil {
		return x.IsRemoved
	}
	return false
}

// Погода в мире
type Weather struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Weather_WeatherType    `protobuf:"varint,1,opt,name=type,proto3,enum=game.Weather_WeatherType" json:"type,omitempty"`
	Intensity     float32                `protobuf:"fixed32,2,opt,name=intensity,proto3" json:"intensity,omitempty"` // 0.0 - 1.0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Weather) Reset() {
	*x = Weather{}
	mi := &file_proto_game_game_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Weather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weather) ProtoMessage() {}

func (x *Weather) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weather.ProtoReflect.Descriptor instead.
func (*Weather) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{21}
}

func (x *Weather) GetType() Weather_WeatherType {
	if x != nil {
		return x.Type
	}
	return Weather_CLEAR
}

func (x *Weather) GetIntensity() float32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

// Информация о времени
type TimeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DayTime       int64                  `protobuf:"varint,1,opt,name=day_time,json=dayTime,proto3" json:"day_time,omitempty"` // Время дня (тиков)
	Day           int32                  `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`                        // Номер дня
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeInfo) Reset() {
	*x = TimeInfo{}
	mi := &file_proto_game_game_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeInfo) ProtoMessage() {}

func (x *TimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeInfo.ProtoReflect.Descriptor instead.
func (*TimeInfo) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{22}
}

func (x *TimeInfo) GetDayTime() int64 {
	if x != nil {
		return x.DayTime
	}
	return 0
}

func (x *TimeInfo) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

// Широковещательное сообщение чата
type ChatBroadcast struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName     string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	IsGlobal       bool                   `protobuf:"varint,4,opt,name=is_global,json=isGlobal,proto3" json:"is_global,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,5,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"` // Для личных сообщений
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChatBroadcast) Reset() {
	*x = ChatBroadcast{}
	mi := &file_proto_game_game_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBroadcast) ProtoMessage() {}

func (x *ChatBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBroadcast.ProtoReflect.Descriptor instead.
func (*ChatBroadcast) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{23}
}

func (x *ChatBroadcast) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChatBroadcast) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ChatBroadcast) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatBroadcast) GetIsGlobal() bool {
	if x != nil {
		return x.IsGlobal
	}
	return false
}

func (x *ChatBroadcast) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

// Пинг (для проверки соединения)
type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_proto_game_game_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{24}
}

func (x *Ping) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Ответ на пинг
type Pong struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ClientTimestamp int64                  `protobuf:"varint,1,opt,name=client_timestamp,json=clientTimestamp,proto3" json:"client_timestamp,omitempty"`
	ServerTimestamp int64                  `protobuf:"varint,2,opt,name=server_timestamp,json=serverTimestamp,proto3" json:"server_timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_proto_game_game_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_game_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_proto_game_game_proto_rawDescGZIP(), []int{25}
}

func (x *Pong) GetClientTimestamp() int64 {
	if x != nil {
		return x.ClientTimestamp
	}
	return 0
}

func (x *Pong) GetServerTimestamp() int64 {
	if x != nil {
		return x.ServerTimestamp
	}
	return 0
}

var File_proto_game_game_proto protoreflect.FileDescriptor

const file_proto_game_game_proto_rawDesc = "" +
	"\n" +
	"\x15proto/game/game.proto\x12\x04game\".\n" +
	"\vJoinRequest\x12\x1f\n" +
	"\vplayer_name\x18\x01 \x01(\tR\n" +
	"playerName\"\xa1\x01\n" +
	"\fJoinResponse\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x125\n" +
	"\x0espawn_position\x18\x02 \x01(\v2\x0e.game.PositionR\rspawnPosition\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"|\n" +
	"\fChunkRequest\x127\n" +
	"\x0fplayer_position\x18\x01 \x01(\v2\x0e.game.PositionR\x0eplayerPosition\x12\x16\n" +
	"\x06radius\x18\x02 \x01(\x05R\x06radius\x12\x1b\n" +
	"\tplayer_id\x18\x03 \x01(\tR\bplayerId\"a\n" +
	"\x0fGenerateRequest\x121\n" +
	"\tpositions\x18\x01 \x03(\v2\x13.game.ChunkPositionR\tpositions\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\"Q\n" +
	"\x10GenerateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\xee\x01\n" +
	"\rClientMessage\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x122\n" +
	"\bmovement\x18\x02 \x01(\v2\x14.game.PlayerMovementH\x00R\bmovement\x126\n" +
	"\fblock_action\x18\x03 \x01(\v2\x11.game.BlockActionH\x00R\vblockAction\x12'\n" +
	"\x04chat\x18\x04 \x01(\v2\x11.game.ChatMessageH\x00R\x04chat\x12 \n" +
	"\x04ping\x18\x05 \x01(\v2\n" +
	".game.PingH\x00R\x04pingB\t\n" +
	"\apayload\"\xa2\x02\n" +
	"\rServerMessage\x123\n" +
	"\vworld_event\x18\x01 \x01(\v2\x10.game.WorldEventH\x00R\n" +
	"worldEvent\x129\n" +
	"\rplayer_update\x18\x02 \x01(\v2\x12.game.PlayerUpdateH\x00R\fplayerUpdate\x126\n" +
	"\fchunk_update\x18\x03 \x01(\v2\x11.game.ChunkUpdateH\x00R\vchunkUpdate\x12<\n" +
	"\x0echat_broadcast\x18\x04 \x01(\v2\x13.game.ChatBroadcastH\x00R\rchatBroadcast\x12 \n" +
	"\x04pong\x18\x05 \x01(\v2\n" +
	".game.PongH\x00R\x04pongB\t\n" +
	"\apayload\"\x80\x01\n" +
	"\x0ePlayerMovement\x121\n" +
	"\fnew_position\x18\x01 \x01(\v2\x0e.game.PositionR\vnewPosition\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\x02R\tdirection\x12\x1d\n" +
	"\n" +
	"is_running\x18\x03 \x01(\bR\tisRunning\"\xc2\x01\n" +
	"\vBlockAction\x124\n" +
	"\x06action\x18\x01 \x01(\x0e2\x1c.game.BlockAction.ActionTypeR\x06action\x12*\n" +
	"\bposition\x18\x02 \x01(\v2\x0e.game.PositionR\bposition\x12\x1d\n" +
	"\n" +
	"block_type\x18\x03 \x01(\x05R\tblockType\"2\n" +
	"\n" +
	"ActionType\x12\t\n" +
	"\x05PLACE\x10\x00\x12\v\n" +
	"\aDESTROY\x10\x01\x12\f\n" +
	"\bINTERACT\x10\x02\"n\n" +
	"\vChatMessage\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1b\n" +
	"\tis_global\x18\x02 \x01(\bR\bisGlobal\x12(\n" +
	"\x10target_player_id\x18\x03 \x01(\tR\x0etargetPlayerId\"\xa4\x01\n" +
	"\x06Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12*\n" +
	"\bposition\x18\x03 \x01(\v2\x0e.game.PositionR\bposition\x12\x16\n" +
	"\x06health\x18\x04 \x01(\x05R\x06health\x122\n" +
	"\x15current_selected_item\x18\x05 \x01(\x05R\x13currentSelectedItem\"4\n" +
	"\bPosition\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x05R\x01z\"+\n" +
	"\rChunkPosition\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\"\x87\x01\n" +
	"\x05Chunk\x12/\n" +
	"\bposition\x18\x01 \x01(\v2\x13.game.ChunkPositionR\bposition\x12#\n" +
	"\x06blocks\x18\x02 \x03(\v2\v.game.BlockR\x06blocks\x12(\n" +
	"\bentities\x18\x03 \x03(\v2\f.game.EntityR\bentities\"\xb3\x01\n" +
	"\x05Block\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x12;\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2\x1b.game.Block.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x01\n" +
	"\x06Entity\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12*\n" +
	"\bposition\x18\x03 \x01(\v2\x0e.game.PositionR\bposition\x12<\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2\x1c.game.Entity.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x03\n" +
	"\n" +
	"WorldEvent\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.game.WorldEvent.EventTypeR\x04type\x12*\n" +
	"\bposition\x18\x02 \x01(\v2\x0e.game.PositionR\bposition\x12\x1b\n" +
	"\tplayer_id\x18\x03 \x01(\tR\bplayerId\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12#\n" +
	"\x05block\x18\x04 \x01(\v2\v.game.BlockH\x00R\x05block\x12&\n" +
	"\x06entity\x18\x05 \x01(\v2\f.game.EntityH\x00R\x06entity\x12)\n" +
	"\aweather\x18\x06 \x01(\v2\r.game.WeatherH\x00R\aweather\x12-\n" +
	"\ttime_info\x18\a \x01(\v2\x0e.game.TimeInfoH\x00R\btimeInfo\"\x98\x01\n" +
	"\tEventType\x12\x10\n" +
	"\fBLOCK_PLACED\x10\x00\x12\x13\n" +
	"\x0fBLOCK_DESTROYED\x10\x01\x12\x12\n" +
	"\x0eENTITY_SPAWNED\x10\x02\x12\x14\n" +
	"\x10ENTITY_DESTROYED\x10\x03\x12\x13\n" +
	"\x0fWEATHER_CHANGED\x10\x04\x12\x10\n" +
	"\fTIME_CHANGED\x10\x05\x12\x13\n" +
	"\x0fSERVER_SHUTDOWN\x10\x06B\t\n" +
	"\apayload\"\xc6\x01\n" +
	"\fPlayerUpdate\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12*\n" +
	"\bposition\x18\x02 \x01(\v2\x0e.game.PositionR\bposition\x12\x16\n" +
	"\x06health\x18\x03 \x01(\x05R\x06health\x12!\n" +
	"\fis_connected\x18\x04 \x01(\bR\visConnected\x122\n" +
	"\x15current_selected_item\x18\x05 \x01(\x05R\x13currentSelectedItem\"\xb1\x01\n" +
	"\vChunkUpdate\x12/\n" +
	"\bposition\x18\x01 \x01(\v2\x13.game.ChunkPositionR\bposition\x126\n" +
	"\rblock_updates\x18\x02 \x03(\v2\x11.game.BlockUpdateR\fblockUpdates\x129\n" +
	"\x0eentity_updates\x18\x03 \x03(\v2\x12.game.EntityUpdateR\rentityUpdates\"\xbf\x01\n" +
	"\vBlockUpdate\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x12A\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2!.game.BlockUpdate.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x02\n" +
	"\fEntityUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12*\n" +
	"\bposition\x18\x03 \x01(\v2\x0e.game.PositionR\bposition\x12B\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2\".game.EntityUpdate.PropertiesEntryR\n" +
	"properties\x12\x1d\n" +
	"\n" +
	"is_removed\x18\x05 \x01(\bR\tisRemoved\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x01\n" +
	"\aWeather\x12-\n" +
	"\x04type\x18\x01 \x01(\x0e2\x19.game.Weather.WeatherTypeR\x04type\x12\x1c\n" +
	"\tintensity\x18\x02 \x01(\x02R\tintensity\"-\n" +
	"\vWeatherType\x12\t\n" +
	"\x05CLEAR\x10\x00\x12\b\n" +
	"\x04RAIN\x10\x01\x12\t\n" +
	"\x05STORM\x10\x02\"7\n" +
	"\bTimeInfo\x12\x19\n" +
	"\bday_time\x18\x01 \x01(\x03R\adayTime\x12\x10\n" +
	"\x03day\x18\x02 \x01(\x05R\x03day\"\xae\x01\n" +
	"\rChatBroadcast\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1b\n" +
	"\tis_global\x18\x04 \x01(\bR\bisGlobal\x12(\n" +
	"\x10target_player_id\x18\x05 \x01(\tR\x0etargetPlayerId\"$\n" +
	"\x04Ping\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\"\\\n" +
	"\x04Pong\x12)\n" +
	"\x10client_timestamp\x18\x01 \x01(\x03R\x0fclientTimestamp\x12)\n" +
	"\x10server_timestamp\x18\x02 \x01(\x03R\x0fserverTimestamp2\xee\x01\n" +
	"\fWorldService\x121\n" +
	"\bJoinGame\x12\x11.game.JoinRequest\x1a\x12.game.JoinResponse\x12:\n" +
	"\n" +
	"GameStream\x12\x13.game.ClientMessage\x1a\x13.game.ServerMessage(\x010\x01\x12.\n" +
	"\tGetChunks\x12\x12.game.ChunkRequest\x1a\v.game.Chunk0\x01\x12?\n" +
	"\x0eGenerateChunks\x12\x15.game.GenerateRequest\x1a\x16.game.GenerateResponseB4Z2github.com/annelo/go-grpc-server/pkg/protocol/gameb\x06proto3"

var (
	file_proto_game_game_proto_rawDescOnce sync.Once
	file_proto_game_game_proto_rawDescData []byte
)

func file_proto_game_game_proto_rawDescGZIP() []byte {
	file_proto_game_game_proto_rawDescOnce.Do(func() {
		file_proto_game_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_game_game_proto_rawDesc), len(file_proto_game_game_proto_rawDesc)))
	})
	return file_proto_game_game_proto_rawDescData
}

var file_proto_game_game_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_game_game_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_proto_game_game_proto_goTypes = []any{
	(BlockAction_ActionType)(0), // 0: game.BlockAction.ActionType
	(WorldEvent_EventType)(0),   // 1: game.WorldEvent.EventType
	(Weather_WeatherType)(0),    // 2: game.Weather.WeatherType
	(*JoinRequest)(nil),         // 3: game.JoinRequest
	(*JoinResponse)(nil),        // 4: game.JoinResponse
	(*ChunkRequest)(nil),        // 5: game.ChunkRequest
	(*GenerateRequest)(nil),     // 6: game.GenerateRequest
	(*GenerateResponse)(nil),    // 7: game.GenerateResponse
	(*ClientMessage)(nil),       // 8: game.ClientMessage
	(*ServerMessage)(nil),       // 9: game.ServerMessage
	(*PlayerMovement)(nil),      // 10: game.PlayerMovement
	(*BlockAction)(nil),         // 11: game.BlockAction
	(*ChatMessage)(nil),         // 12: game.ChatMessage
	(*Player)(nil),              // 13: game.Player
	(*Position)(nil),            // 14: game.Position
	(*ChunkPosition)(nil),       // 15: game.ChunkPosition
	(*Chunk)(nil),               // 16: game.Chunk
	(*Block)(nil),               // 17: game.Block
	(*Entity)(nil),              // 18: game.Entity
	(*WorldEvent)(nil),          // 19: game.WorldEvent
	(*PlayerUpdate)(nil),        // 20: game.PlayerUpdate
	(*ChunkUpdate)(nil),         // 21: game.ChunkUpdate
	(*BlockUpdate)(nil),         // 22: game.BlockUpdate
	(*EntityUpdate)(nil),        // 23: game.EntityUpdate
	(*Weather)(nil),             // 24: game.Weather
	(*TimeInfo)(nil),            // 25: game.TimeInfo
	(*ChatBroadcast)(nil),       // 26: game.ChatBroadcast
	(*Ping)(nil),                // 27: game.Ping
	(*Pong)(nil),                // 28: game.Pong
	nil,                         // 29: game.Block.PropertiesEntry
	nil,                         // 30: game.Entity.PropertiesEntry
	nil,                         // 31: game.BlockUpdate.PropertiesEntry
	nil,                         // 32: game.EntityUpdate.PropertiesEntry
}
var file_proto_game_game_proto_depIdxs = []int32{
	14, // 0: game.JoinResponse.spawn_position:type_name -> game.Position
	14, // 1: game.ChunkRequest.player_position:type_name -> game.Position
	15, // 2: game.GenerateRequest.positions:type_name -> game.ChunkPosition
	10, // 3: game.ClientMessage.movement:type_name -> game.PlayerMovement
	11, // 4: game.ClientMessage.block_action:type_name -> game.BlockAction
	12, // 5: game.ClientMessage.chat:type_name -> game.ChatMessage
	27, // 6: game.ClientMessage.ping:type_name -> game.Ping
	19, // 7: game.ServerMessage.world_event:type_name -> game.WorldEvent
	20, // 8: game.ServerMessage.player_update:type_name -> game.PlayerUpdate
	21, // 9: game.ServerMessage.chunk_update:type_name -> game.ChunkUpdate
	26, // 10: game.ServerMessage.chat_broadcast:type_name -> game.ChatBroadcast
	28, // 11: game.ServerMessage.pong:type_name -> game.Pong
	14, // 12: game.PlayerMovement.new_position:type_name -> game.Position
	0,  // 13: game.BlockAction.action:type_name -> game.BlockAction.ActionType
	14, // 14: game.BlockAction.position:type_name -> game.Position
	14, // 15: game.Player.position:type_name -> game.Position
	15, // 16: game.Chunk.position:type_name -> game.ChunkPosition
	17, // 17: game.Chunk.blocks:type_name -> game.Block
	18, // 18: game.Chunk.entities:type_name -> game.Entity
	29, // 19: game.Block.properties:type_name -> game.Block.PropertiesEntry
	14, // 20: game.Entity.position:type_name -> game.Position
	30, // 21: game.Entity.properties:type_name -> game.Entity.PropertiesEntry
	1,  // 22: game.WorldEvent.type:type_name -> game.WorldEvent.EventType
	14, // 23: game.WorldEvent.position:type_name -> game.Position
	17, // 24: game.WorldEvent.block:type_name -> game.Block
	18, // 25: game.WorldEvent.entity:type_name -> game.Entity
	24, // 26: game.WorldEvent.weather:type_name -> game.Weather
	25, // 27: game.WorldEvent.time_info:type_name -> game.TimeInfo
	14, // 28: game.PlayerUpdate.position:type_name -> game.Position
	15, // 29: game.ChunkUpdate.position:type_name -> game.ChunkPosition
	22, // 30: game.ChunkUpdate.block_updates:type_name -> game.BlockUpdate
	23, // 31: game.ChunkUpdate.entity_updates:type_name -> game.EntityUpdate
	31, // 32: game.BlockUpdate.properties:type_name -> game.BlockUpdate.PropertiesEntry
	14, // 33: game.EntityUpdate.position:type_name -> game.Position
	32, // 34: game.EntityUpdate.properties:type_name -> game.EntityUpdate.PropertiesEntry
	2,  // 35: game.Weather.type:type_name -> game.Weather.WeatherType
	3,  // 36: game.WorldService.JoinGame:input_type -> game.JoinRequest
	8,  // 37: game.WorldService.GameStream:input_type -> game.ClientMessage
	5,  // 38: game.WorldService.GetChunks:input_type -> game.ChunkRequest
	6,  // 39: game.WorldService.GenerateChunks:input_type -> game.GenerateRequest
	4,  // 40: game.WorldService.JoinGame:output_type -> game.JoinResponse
	9,  // 41: game.WorldService.GameStream:output_type -> game.ServerMessage
	16, // 42: game.WorldService.GetChunks:output_type -> game.Chunk
	7,  // 43: game.WorldService.GenerateChunks:output_type -> game.GenerateResponse
	40, // [40:44] is the sub-list for method output_type
	36, // [36:40] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_proto_game_game_proto_init() }
func file_proto_game_game_proto_init() {
	if File_proto_game_game_proto != nil {
		return
	}
	file_proto_game_game_proto_msgTypes[5].OneofWrappers = []any{
		(*ClientMessage_Movement)(nil),
		(*ClientMessage_BlockAction)(nil),
		(*ClientMessage_Chat)(nil),
		(*ClientMessage_Ping)(nil),
	}
	file_proto_game_game_proto_msgTypes[6].OneofWrappers = []any{
		(*ServerMessage_WorldEvent)(nil),
		(*ServerMessage_PlayerUpdate)(nil),
		(*ServerMessage_ChunkUpdate)(nil),
		(*ServerMessage_ChatBroadcast)(nil),
		(*ServerMessage_Pong)(nil),
	}
	file_proto_game_game_proto_msgTypes[16].OneofWrappers = []any{
		(*WorldEvent_Block)(nil),
		(*WorldEvent_Entity)(nil),
		(*WorldEvent_Weather)(nil),
		(*WorldEvent_TimeInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_game_game_proto_rawDesc), len(file_proto_game_game_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_game_game_proto_goTypes,
		DependencyIndexes: file_proto_game_game_proto_depIdxs,
		EnumInfos:         file_proto_game_game_proto_enumTypes,
		MessageInfos:      file_proto_game_game_proto_msgTypes,
	}.Build()
	File_proto_game_game_proto = out.File
	file_proto_game_game_proto_goTypes = nil
	file_proto_game_game_proto_depIdxs = nil
}

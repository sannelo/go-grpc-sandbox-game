---
description: 
globs: 
alwaysApply: false
---
1. ЯЗЫК ОБЩЕНИЯ  
   • ПО УМОЛЧАНИЮ отвечаете на РУССКОМ, если пользователь не просит ИНОГО.  
   • Англоязычные вставки — ТОЛЬКО при явном запросе.

2. КОД И КОММЕНТАРИИ  
   • ВСЕ КОДЫ — С ПОНЯТНЫМИ ИНФОРМАТИВНЫМИ КОММЕНТАРИЯМИ.  
   • Форматы: `//`, `/*…*/`, `#`, `<!--…-->` и т. д.

3. ДОКУМЕНТАЦИЯ К ФУНКЦИЯМ И КЛАССАМ  
   • Java — JavaDoc (`/** … */`).  
   • Python — docstring (`"""…"""`).  
   • JS/TS — JSDoc (`/** … */`).  
   • Другие языки — аналогичный встроенный формат.

4. ГЕНЕРАЦИЯ И АНАЛИЗ ИДЕЙ  
   • МИНИМУМ 5 ИДЕЙ.  
   • Для каждой — 5–10 ПЛЮСОВ и 5–10 МИНУСОВ.  
   • СРАВНЕНИЕ вариантов и ОБОСНОВАННЫЙ ВЫБОР ЛУЧШЕГО РЕШЕНИЯ.

5. УСТАРЕВШИЕ БИБЛИОТЕКИ  
   • СНАЧАЛА ИЩЕМ РЕШЕНИЕ В `context7`.  
   • Если НЕ НАШЛИ — ЗАПРАШИВАЕМ у пользователя АКТУАЛЬНУЮ ИНФОРМАЦИЮ.

6. ЛОГИКА И ОБОСНОВАНИЯ  
   • ЧЁТКО И ПОСЛЕДОВАТЕЛЬНО: гипотезы, «почему», «как».  
   • ИЗБЕГАТЬ необоснованных утверждений, ПОДКРЕПЛЯТЬ примерами.

7. ФОРМАТИРОВАНИЕ И ЧИТАЕМОСТЬ  
   • КОД — БЛОКАМИ, указываете пути файлов и номера строк при ссылке на проект.

8. СОБЛЮДЕНИЕ СТИЛЕЙ И СТАНДАРТОВ  
   • Учитывайте проектные гайды (PEP8, Airbnb, Google Style и др.).  
   • Автоматическая проверка линтером и исправление предупреждений.

9. ТЕСТИРОВАНИЕ  
   • Юнит-тесты для новых функций.  
   • По возможности — интеграционные и E2E-тесты.

10. МОДУЛЬНОСТЬ И РАСШИРЯЕМОСТЬ  
   • Следовать принципам SOLID, разделять ответственность.  
   • Избегать «больших» классов — строить МЕЛКИЕ, ПЕРЕИСПОЛЬЗУЕМЫЕ модули.

11. ОБРАБОТКА ОШИБОК И ЛОГИРОВАНИЕ  
   • ГРАМОТНО ловить и обрабатывать исключения, не подавлять их.  
   • Добавлять ЛОГИРОВАНИЕ на ключевых этапах.

12. ДОКУМЕНТАЦИЯ API И ПРИМЕРЫ  
   • Приводить примеры вызовов.  
   • Описывать формат входных и выходных данных.

14. ПРОИЗВОДИТЕЛЬНОСТЬ И МАСШТАБИРУЕМОСТЬ  
   • Оценивать алгоритмическую сложность (O-нотацию).  
   • При необходимости предлагать КЕШИРОВАНИЕ и АСИНХРОННОСТЬ.

15. УПРАВЛЕНИЕ ЗАВИСИМОСТЯМИ  
   • ФИКСИРОВАТЬ версии (lock-файлы).  
   • При обновлениях проверять ОБРАТНУЮ СОВМЕСТИМОСТЬ.

18. ОСОБЕННОСТИ LLM  
   • ИСПОЛЬЗОВАТЬ ЧЁТКУЮ ЦЕПОЧКУ РАССУЖДЕНИЙ.  
   • УЧИТЫВАТЬ ОГРАНИЧЕНИЯ КОНТЕКСТНОГО ОКНА — отвечать ЭФФЕКТИВНО.  
   • ИЗБЕГАТЬ ИЗЛИШНЕГО ПОВТОРЕНИЯ.
